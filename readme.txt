Применения  потоков (threading) - необходимо, так как нам нужно сделать более 70 http request-ов и получить по ним
ответы. В каждом из запросов, условно, время ожидания - 90-95%, время обработки CPU 5-10%, поэтому применение
многопоточности приводит к сокращению времени выполнения программы с 40 секунд до 3-5 секунд.
При этом, в обычных вычислениях/операциях, там где нет ожидания, из-за GIL, время выполнения программы в многопоточном
режиме будет даже выше, чем в однопоточном.
Теоретически, применение асинхронных вычислений (asinc), может дать еще больший выйгрыш в производительности.

NOTE 1. По хорошему нужно было проводить валидацию андессов на входе. Так как в задании ничего об этом не говориться,
как и о том что делать с нерабочими адресами, валидацию URL на входе не проводил (возможно одна из целей задания
убедится что нерабочий адресс не потерялся), компенсировав автоматическим присвоением кода 404 в случае отсутствия
ответа в течении тайм-аут периода 2 секунды.

NOTE 2. В результате парсинга файла messages_to_parse.dat, попадает URL типа .Realtor.com. По хорошему его нужно
нормализовать, но об этом в задании нет не слова. Я нормализовал адрес, так как адресс живой.


Date  2021-11-14.
Time of project execution  4s.
Dict length art3 71.
Dict length art3  53.